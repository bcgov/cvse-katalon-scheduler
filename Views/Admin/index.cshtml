@model AdminViewModel
@{
    ViewData["Title"] = "Admin Settings";
}

<!-- Application Settings Section -->
<div class="card mb-4">
    <div class="card-header">
        <h5 class="mb-0">Application Settings</h5>
    </div>
    <div class="card-body">
        <form asp-controller="Admin" asp-action="UpdateSettings" method="post">
            <div class="row">
                <div class="col-md-6 mb-3">
                    <label class="form-label">Katalon Runtime Path</label>
                    <input type="text" name="KatalonPath" class="form-control" 
                           value="@Model.KatalonPath" required />
                    <small class="text-muted">Example: C:\Katalon\Katalon_Studio_Engine_Windows_64-10.0.1\katalonc.exe</small>
                </div>
                <div class="col-md-6 mb-3">
                    <label class="form-label">Base Repository Path</label>
                    <input type="text" name="BaseRepositoryPath" class="form-control" 
                           value="@Model.BaseRepositoryPath" required />
                    <small class="text-muted">Example: C:\KatalonProjects</small>
                </div>
            </div>
            <button type="submit" class="btn btn-primary">Save Settings</button>
        </form>
    </div>
</div>

<div class="container">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>Admin Settings</h2>
        <button class="btn btn-success" onclick="toggleAddOrgSection()">Add Organization</button>
    </div>

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success">@TempData["Success"]</div>
    }
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger">@TempData["Error"]</div>
    }

    <!-- Organization Section -->
    <div id="addOrgSection" class="card mb-4" style="display: none;">
        <div class="card-header">
            <h5 class="mb-0">Add New Organization</h5>
        </div>
        <div class="card-body">
            <form asp-controller="Organization" asp-action="Create" method="post">
                <input type="hidden" name="Id" id="orgId" value="0" />
                <div class="row">
                    <div class="col-md-4 mb-3">
                        <label class="form-label">Organization Name</label>
                        <input type="text" name="Name" class="form-control" required />
                    </div>
                    <div class="col-md-4 mb-3">
                        <label class="form-label">Organization ID</label>
                        <input type="text" name="KatalonOrganizationId" class="form-control" required
                            pattern="[A-Za-z0-9_-]+" title="Only letters, numbers, hyphens and underscores allowed" />
                    </div>
                </div>
                <button type="submit" class="btn btn-primary">Add Organization</button>
                <button type="button" class="btn btn-secondary" onclick="toggleAddOrgSection()">Cancel</button>
            </form>
        </div>
    </div>

    <!-- Organizations Table -->
    <div class="card mb-4">
        <div class="card-header">
            <h5 class="mb-0">Organizations</h5>
        </div>
        <div class="table-responsive">
            <table class="table table-striped mb-0">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>ID</th>
                        <th>Projects</th>
                        <th>Created</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var org in Model.Organizations)
                    {
                        <tr>
                            <td>@org.Name</td>
                            <td>@org.KatalonOrganizationId</td>
                            <td>@org.Projects.Count</td>
                            <td>@org.CreatedAt.ToLocalTime().ToString("g")</td>
                            <td>
                                <div class="btn-group">
                                    <button class="btn btn-sm btn-outline-primary" onclick="editOrg(@org.Id)">Edit</button>
                                    <button class="btn btn-sm btn-outline-danger"
                                        onclick="deleteOrg(@org.Id)">Delete</button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <!-- Edit Organization Modal -->
            <div class="modal fade" id="editOrgModal" tabindex="-1">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Edit Organization</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                        </div>
                        <div class="modal-body">
                            <form id="editOrgForm" method="post">
                                <input type="hidden" id="editOrgId" name="Id" />
                                <div class="mb-3">
                                    <label class="form-label">Organization Name</label>
                                    <input type="text" id="editOrgName" name="Name" class="form-control" required />
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Organization ID</label>
                                    <input type="text" id="editOrgKatalonId" name="KatalonOrganizationId"
                                        class="form-control" required pattern="[A-Za-z0-9_-]+"
                                        title="Only letters, numbers, hyphens and underscores allowed" />
                                </div>
                            </form>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="button" class="btn btn-primary" onclick="updateOrg()">Update
                                Organization</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function toggleAddOrgSection() {
            const section = document.getElementById('addOrgSection');
            section.style.display = section.style.display === 'none' ? 'block' : 'none';
        }


        async function deleteOrg(id) {
            if (!confirm('Are you sure? This will delete all associated projects.')) return;

            try {
                const response = await fetch(`/Organization/Delete/${id}`, {
                    method: 'POST'
                });
                if (response.ok) location.reload();
                else alert('Failed to delete organization');
            } catch (error) {
                console.error('Error:', error);
                alert('Error deleting organization');
            }
        }

        let editModal;

        document.addEventListener('DOMContentLoaded', function () {
            editModal = new bootstrap.Modal(document.getElementById('editOrgModal'));
        });

        async function editOrg(id) {
            try {
                const response = await fetch(`/Organization/GetOrganization/${id}`);
                const org = await response.json();

                // Populate the modal form
                document.getElementById('editOrgId').value = org.id;
                document.getElementById('editOrgName').value = org.name;
                document.getElementById('editOrgKatalonId').value = org.katalonOrganizationId;

                // Show the modal
                editModal.show();
            } catch (error) {
                console.error('Error:', error);
                alert('Error loading organization data');
            }
        }

        async function updateOrg() {
            const form = document.getElementById('editOrgForm');
            const formData = new FormData(form);
            const orgId = document.getElementById('editOrgId').value;

            try {
                const response = await fetch(`/Organization/Create`, {
                    method: 'POST',
                    body: formData
                });

                if (response.ok) {
                    editModal.hide();
                    location.reload();
                } else {
                    alert('Failed to update organization');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Error updating organization');
            }
        }

        function resetForm() {
            const form = document.querySelector('#addOrgSection form');
            form.reset();
            document.querySelector('#orgId').value = '0';
            document.querySelector('#addOrgSection .card-header h5').textContent = 'Add New Organization';
            document.querySelector('#addOrgSection button[type="submit"]').textContent = 'Add Organization';
        }

        function toggleAddOrgSection() {
            const section = document.getElementById('addOrgSection');
            if (section.style.display === 'none') {
                resetForm();
            }
            section.style.display = section.style.display === 'none' ? 'block' : 'none';
        }
    </script>
}